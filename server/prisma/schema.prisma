// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id         Int      @id @default(autoincrement())
  username        String?  @db.VarChar(50)
  email           String   @unique @db.VarChar(255)
  hashed_password String   @db.VarChar(255)
  firstname       String?  @db.VarChar(100)
  lastname        String?  @db.VarChar(100)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  expenses   Expense[]
  incomes    Income[]
  categories ExpenseCategory[]

  @@map("user")
}

model ExpenseCategory {
  category_id   Int       @id @default(autoincrement())
  category_name String    @db.VarChar(50)
  is_custom     Boolean   @default(false)
  user_id       Int?
  user          User?     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  expenses      Expense[]
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  @@map("expense_category")
}

model Expense {
  expense_id     Int      @id @default(autoincrement())
  amount         Float
  description    String?  @db.VarChar(2000)
  type           ExpenseType @default(ONE_TIME)
  creation_date  DateTime @default(now())
  expense_date   DateTime?  // For one-time expenses or next occurrence of recurring
  start_date     DateTime?   // When the recurring expense starts
  end_date       DateTime?   // When the recurring expense ends (null means indefinitely)
  last_processed DateTime?   // Last time the expense was processed
  user_id        Int
  user           User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  category_id    Int
  category       ExpenseCategory @relation(fields: [category_id], references: [category_id], onDelete: Cascade)

  receipt_url    String?       @db.VarChar(1024)
  receipt_mime   String?       @db.VarChar(50)
  receipt_size   Int?  

  @@map("expense")
  
}

enum ExpenseType {
  ONE_TIME
  RECURRING
}

model Income {
  income_id     Int      @id @default(autoincrement()) @map("id")
  amount        Float
  date          DateTime @default(now())
  source        String?  @db.VarChar(100)
  description   String?  @db.VarChar(2000)
  creation_date DateTime @default(now())

  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@map("income")
}
