// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id   Int      @id @default(autoincrement()) @map("id")
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  username  String?  @db.VarChar(50)
  firstName String?  @db.VarChar(100)
  lastName  String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expenses   Expense[]
  incomes    Income[]
  categories Category[]

  @@map("user")
}

model Category {
  category_id Int      @id @default(autoincrement()) @map("id")
  name        String   @db.VarChar(50)
  iconUrl     String?  @db.VarChar(500)
  isCustom    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user_id Int?
  user    User? @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  expenses Expense[]

  @@map("category")
}

model Expense {
  expense_id  Int         @id @default(autoincrement()) @map("id")
  amount      Float
  description String?     @db.VarChar(2000)
  type        ExpenseType @default(ONE_TIME)
  receiptUrl  String?     @db.VarChar(2000)
  createdAt   DateTime    @default(now())
  expenseDate DateTime?
  startDate   DateTime?
  endDate     DateTime?

  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  category_id Int
  category    Category @relation(fields: [category_id], references: [category_id], onDelete: Cascade)

  @@map("expense")
}

model Income {
  income_id   Int      @id @default(autoincrement()) @map("id")
  amount      Float
  date        DateTime @default(now())
  source      String?  @db.VarChar(100)
  description String?  @db.VarChar(2000)
  createdAt   DateTime @default(now())

  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@map("income")
}

enum ExpenseType {
  ONE_TIME
  RECURRING
}
