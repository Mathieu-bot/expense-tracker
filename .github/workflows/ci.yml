name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  client:
    name: Client - Lint / Typecheck / Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --no-workspace-update -- --max-warnings=0

      - name: Typecheck
        run: npx tsc --noEmit

      - name: Build
        run: npm run build --no-workspace-update

  server:
    name: Server - Prisma Generate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Create .env for Prisma (CI)
        run: |
          printf "DATABASE_URL=%s\n" "${{ secrets.DATABASE_URL || 'postgresql://user:pass@localhost:5432/db' }}" > .env

      - name: Prisma Generate
        run: npm run prisma:generate
      - name: Prisma Validate
        run: npx prisma validate
